let cvs=document.getElementById("interactive-text");if(cvs==null||undefined){let allOfThem=document.getElementsByTagName("int-text");let item=allOfThem.item(0);item.innerHTML="<canvas id=\"interactive-text\">";let ccvs=item.children[0];ccvs.setAttribute("width",item.getAttribute("width")||"320");ccvs.setAttribute("height",item.getAttribute("height")||"320");ccvs.setAttribute("text",item.getAttribute("text")||"A");ccvs.setAttribute("font-size",item.getAttribute("font-size")||"12");ccvs.setAttribute("color",item.getAttribute("color")||"#ffffff");ccvs.setAttribute("color-h",item.getAttribute("color-h")||"#8934f9");cvs=document.getElementById("interactive-text");}const ctx=cvs.getContext("2d");let particleArray=[];if(cvs.getAttribute("text")==null||undefined) {cvs.setAttribute("text","A");}if(cvs.getAttribute("font-size")==null||undefined){cvs.setAttribute("font-size","12");}if(cvs.getAttribute("color")==null||undefined) {cvs.setAttribute("color","#ffffff");}if(cvs.getAttribute("color-h")==null||undefined) {cvs.setAttribute("color-h","#8934f9");}const mouse = {x:null,y:null,radius:200};window.addEventListener("mousemove", function(event) {mouse.x = event.x;mouse.y = event.y;});ctx.font = "30px Verdana";ctx.fillText(cvs.getAttribute("text"), 0, 30);const txtCoord = ctx.getImageData(0, 0, cvs.width, cvs.height);class Particle{constructor(x, y) {this.x = x + 100;this.y = y;this.size = 3;this.baseX = this.x;this.baseY = this.y;this.density =(Math.random()*30)+1;this.color = cvs.getAttribute("color");}draw(){ctx.fillStyle=this.color;ctx.beginPath();ctx.arc(this.x, this.y, this.size, 0, Math.PI * 2);ctx.closePath();ctx.fill();}update(){let dx = mouse.x - this.x;let dy = mouse.y - this.y;let dist = Math.sqrt(dx * dx + dy * dy);let fdirX = dx / dist;let fdirY = dy / dist;let maxDist = mouse.radius;let f = (maxDist - dist) / maxDist;let dirX = fdirX * f * this.density;let dirY = fdirY * f * this.density;if(dist < mouse.radius) {this.color = cvs.getAttribute("color-h");this.x -= dirX;this.y -= dirY;}else{if(this.color!==cvs.getAttribute("color"))this.color = cvs.getAttribute("color");if(this.x !== this.baseX){let dx=this.x-this.baseX;this.x-=dx/10;}if(this.y !== this.baseY){let dy = this.y - this.baseY;this.y -= dy/10;}}}}function init() {particleArray=[];for(let y = 0, y2 = txtCoord.height; y < y2; y++){for(let x = 0, x2 = txtCoord.width; x < x2; x++){if(txtCoord.data[(y * 4 * txtCoord.width) + (x * 4) + 3] > 128) {let posX = x;let posY = y;particleArray.push(new Particle(posX * parseInt(cvs.getAttribute("font-size")), posY * parseInt(cvs.getAttribute("font-size"))));}}}}init();function animate(){ctx.clearRect(0, 0, cvs.width, cvs.height);for (let i = 0; i < particleArray.length; i++) {particleArray[i].draw();particleArray[i].update();}connect();requestAnimationFrame(animate);}function connect(){if(parseInt(cvs.getAttribute("font-size")) >= 7){for (let a = 0; a < particleArray.length; a++) {for (letb=a; b < particleArray.length; b++){let dx = particleArray[a].x - particleArray[b].x;let dy = particleArray[a].y - particleArray[b].y;let dist = Math.sqrt(dx * dx + dy * dy);if(dist < parseInt(cvs.getAttribute("font-size")) + 10) {ctx.strokeStyle = particleArray[a].color;ctx.lineWidth = 2;ctx.beginPath();ctx.moveTo(particleArray[a].x, particleArray[a].y);ctx.lineTo(particleArray[b].x, particleArray[b].y);ctx.closePath();ctx.stroke();}}}}}requestAnimationFrame(animate);